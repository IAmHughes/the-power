
# https://github.com/actions/create-github-app-token?tab=readme-ov-file#create-github-app-token
name: the-power-workflow-github-app-create-issue
on:
  workflow_dispatch:
  workflow_call:
  repository_dispatch:
    types: [custom_event_type]
jobs:
  blank:
    runs-on: [ 'ubuntu-latest' ]
    steps:
    - name: Create GitHub App token
      id: create_token
      uses: actions/create-github-app-token@v1
      with:
          app-id: $default_app_id
          private-key: ${{ secrets.app_cert_secret }}
          # https://github.com/actions/create-github-app-token?tab=readme-ov-file#owner
          owner: $org

    - name: Create issue using octokit
      uses: octokit/request-action@v2.x
      with:
        route: POST /repos/${{ github.repository }}/issues
        title: "New issue from workflow created by GitHub App"
        body: "This is a new issue created from a GitHub Action workflow."
      env:
        GITHUB_TOKEN: ${{ steps.create_token.outputs.token }}

    - name: Close issue number 1 using gh authed as the github app
      env:
        GITHUB_TOKEN: ${{ steps.create_token.outputs.token }}
      run: |
              export GH_DEBUG="api gh pr list"
              gh auth status 
              gh issue close 1 --repo $org/$repo


  # This workflow contains a single job called "build"
  single_repo:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: app_token_test
    steps:
      - name: Generate a token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
           app-id: ${{ secrets.APP_ID }}
           private-key: ${{ secrets.PRIVATE_KEY }}
  
      - name: Use the token
        shell: bash
        env:
          TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo "Testing the GitHub App token by using it with a GraphQL API query"
          curl -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ env.TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" \
          -d '{"query":"{ viewer { repositories(first: 100) { nodes { name } } } }"}' \
          https://api.github.com/graphql | jq -r '.data.viewer.repositories.nodes | length'

  couple_repos:
    runs-on: ubuntu-latest
    environment: app_token_test
    steps:
      - name: Generate a token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
           app-id: ${{ secrets.APP_ID }}
           private-key: ${{ secrets.PRIVATE_KEY }}
           owner: ${{ github.repository_owner }}
           repositories: power-github-app-workflow1,power-github-app-workflow2
  
      - name: Use the token
        shell: bash
        env:
          TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo "Testing the GitHub App token by using it with a GraphQL API query"
          curl -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ env.TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" \
          -d '{"query":"{ viewer { repositories(first: 100) { nodes { name } } } }"}' \
          https://api.github.com/graphql | jq -r '.data.viewer.repositories.nodes | length'
          
  all_repos:
            # The type of runner that the job will run on
            runs-on: ubuntu-latest
            environment: app_token_test
            steps:
              - name: Generate a token
                id: generate_token
                uses: actions/create-github-app-token@v1
                with:
                   app-id: ${{ secrets.APP_ID }}
                   private-key: ${{ secrets.PRIVATE_KEY }}
                   owner: ${{ github.repository_owner }}
          
              - name: Use the token
                shell: bash
                env:
                  TOKEN: ${{ steps.generate_token.outputs.token }}
                run: |
                  echo "Testing the GitHub App token by using it with a GraphQL API query"
                  curl -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ env.TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" \
                  -d '{"query":"{ viewer { repositories(first: 100) { nodes { name } } } }"}' \
                  https://api.github.com/graphql | jq -r '.data.viewer.repositories.nodes | length'

